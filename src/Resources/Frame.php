<?php

namespace PlaywrightPhp\Resources;

use PlaywrightPhp\Traits\AliasesEvaluationMethods;
use PlaywrightPhp\Traits\AliasesSelectionMethods;
use Nesk\Rialto\Data\BasicResource;

/**
 * @method mixed evaluate(\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null)
 * @method-extended mixed evaluate(callable|\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null)
 * @method mixed evaluateHandle(\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null)
 * @method-extended mixed evaluateHandle(callable|\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null)
 * @method mixed waitForFunction(\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null, \PlaywrightPhp\Resources\PageWaitForFunctionOptions $options = null)
 * @method-extended mixed waitForFunction(callable|\Nesk\Rialto\Data\JsFunction $pageFunction, mixed $arg = null, \PlaywrightPhp\Resources\PageWaitForFunctionOptions $options = null)
 * @method null|\PlaywrightPhp\Resources\ElementHandle|mixed[] waitForSelector(string $selector, \PlaywrightPhp\Resources\PageWaitForSelectorOptions $options)
 * @method-extended null|\PlaywrightPhp\Resources\ElementHandle|mixed[] waitForSelector(string $selector, \PlaywrightPhp\Resources\PageWaitForSelectorOptions $options)
 * @method \PlaywrightPhp\Resources\ElementHandle addScriptTag(array $options = [])
 * @method-extended \PlaywrightPhp\Resources\ElementHandle addScriptTag(array{ $content: string, $path: string, $type: string, $url: string } $options = null)
 * @method \PlaywrightPhp\Resources\ElementHandle addStyleTag(array $options = [])
 * @method-extended \PlaywrightPhp\Resources\ElementHandle addStyleTag(array{ $content: string, $path: string, $url: string } $options = null)
 * @method void check(string $selector, array $options = [])
 * @method-extended void check(string $selector, array{ $force: bool, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method mixed childFrames()
 * @method-extended mixed childFrames()
 * @method void click(string $selector, array $options = [])
 * @method-extended void click(string $selector, array{ $button: string, $clickCount: float, $delay: float, $force: bool, $modifiers: mixed, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method string content()
 * @method-extended string content()
 * @method void dblclick(string $selector, array $options = [])
 * @method-extended void dblclick(string $selector, array{ $button: string, $delay: float, $force: bool, $modifiers: mixed, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method void dispatchEvent(string $selector, string $type, mixed $eventInit = null, array $options = [])
 * @method-extended void dispatchEvent(string $selector, string $type, mixed $eventInit = null, array{ $strict: bool, $timeout: float } $options = null)
 * @method void dragAndDrop(string $source, string $target, array $options = [])
 * @method-extended void dragAndDrop(string $source, string $target, array{ $force: bool, $noWaitAfter: bool, $sourcePosition: array{ $x: float, $y: float }, $strict: bool, $targetPosition: array{ $x: float, $y: float }, $timeout: float, $trial: bool } $options = null)
 * @method void fill(string $selector, string $value, array $options = [])
 * @method-extended void fill(string $selector, string $value, array{ $force: bool, $noWaitAfter: bool, $strict: bool, $timeout: float } $options = null)
 * @method void focus(string $selector, array $options = [])
 * @method-extended void focus(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method \PlaywrightPhp\Resources\ElementHandle frameElement()
 * @method-extended \PlaywrightPhp\Resources\ElementHandle frameElement()
 * @method \PlaywrightPhp\Resources\FrameLocator frameLocator(string $selector)
 * @method-extended \PlaywrightPhp\Resources\FrameLocator frameLocator(string $selector)
 * @method null|string getAttribute(string $selector, string $name, array $options = [])
 * @method-extended null|string getAttribute(string $selector, string $name, array{ $strict: bool, $timeout: float } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByAltText(string|mixed $text, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByAltText(string|mixed $text, array{ $exact: bool } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByLabel(string|mixed $text, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByLabel(string|mixed $text, array{ $exact: bool } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByPlaceholder(string|mixed $text, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByPlaceholder(string|mixed $text, array{ $exact: bool } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByRole(string $role, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByRole(string $role, array{ $checked: bool, $disabled: bool, $exact: bool, $expanded: bool, $includeHidden: bool, $level: float, $name: string|mixed, $pressed: bool, $selected: bool } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByTestId(string|mixed $testId)
 * @method-extended \PlaywrightPhp\Resources\Locator getByTestId(string|mixed $testId)
 * @method \PlaywrightPhp\Resources\Locator getByText(string|mixed $text, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByText(string|mixed $text, array{ $exact: bool } $options = null)
 * @method \PlaywrightPhp\Resources\Locator getByTitle(string|mixed $text, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator getByTitle(string|mixed $text, array{ $exact: bool } $options = null)
 * @method null|\PlaywrightPhp\Resources\Response goto(string $url, array $options = [])
 * @method-extended null|\PlaywrightPhp\Resources\Response goto(string $url, array{ $referer: string, $timeout: float, $waitUntil: string } $options = null)
 * @method void hover(string $selector, array $options = [])
 * @method-extended void hover(string $selector, array{ $force: bool, $modifiers: mixed, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method string innerHTML(string $selector, array $options = [])
 * @method-extended string innerHTML(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method string innerText(string $selector, array $options = [])
 * @method-extended string innerText(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method string inputValue(string $selector, array $options = [])
 * @method-extended string inputValue(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isChecked(string $selector, array $options = [])
 * @method-extended bool isChecked(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isDetached()
 * @method-extended bool isDetached()
 * @method bool isDisabled(string $selector, array $options = [])
 * @method-extended bool isDisabled(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isEditable(string $selector, array $options = [])
 * @method-extended bool isEditable(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isEnabled(string $selector, array $options = [])
 * @method-extended bool isEnabled(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isHidden(string $selector, array $options = [])
 * @method-extended bool isHidden(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method bool isVisible(string $selector, array $options = [])
 * @method-extended bool isVisible(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method \PlaywrightPhp\Resources\Locator locator(string $selector, array $options = [])
 * @method-extended \PlaywrightPhp\Resources\Locator locator(string $selector, array{ $has: \PlaywrightPhp\Resources\Locator, $hasNot: \PlaywrightPhp\Resources\Locator, $hasNotText: string|mixed, $hasText: string|mixed } $options = null)
 * @method string name()
 * @method-extended string name()
 * @method \PlaywrightPhp\Resources\Page page()
 * @method-extended \PlaywrightPhp\Resources\Page page()
 * @method null|\PlaywrightPhp\Resources\Frame parentFrame()
 * @method-extended null|\PlaywrightPhp\Resources\Frame parentFrame()
 * @method void press(string $selector, string $key, array $options = [])
 * @method-extended void press(string $selector, string $key, array{ $delay: float, $noWaitAfter: bool, $strict: bool, $timeout: float } $options = null)
 * @method mixed selectOption(string $selector, null|string|\PlaywrightPhp\Resources\ElementHandle|mixed|array $values, array $options = [])
 * @method-extended mixed selectOption(string $selector, null|string|\PlaywrightPhp\Resources\ElementHandle|mixed|array{ $value: string, $label: string, $index: float } $values, array{ $force: bool, $noWaitAfter: bool, $strict: bool, $timeout: float } $options = null)
 * @method void setChecked(string $selector, bool $checked, array $options = [])
 * @method-extended void setChecked(string $selector, bool $checked, array{ $force: bool, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method void setContent(string $html, array $options = [])
 * @method-extended void setContent(string $html, array{ $timeout: float, $waitUntil: string } $options = null)
 * @method void setInputFiles(string $selector, string|mixed|array $files, array $options = [])
 * @method-extended void setInputFiles(string $selector, string|mixed|array{ $name: string, $mimeType: string, $buffer: mixed } $files, array{ $noWaitAfter: bool, $strict: bool, $timeout: float } $options = null)
 * @method void tap(string $selector, array $options = [])
 * @method-extended void tap(string $selector, array{ $force: bool, $modifiers: mixed, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method null|string textContent(string $selector, array $options = [])
 * @method-extended null|string textContent(string $selector, array{ $strict: bool, $timeout: float } $options = null)
 * @method string title()
 * @method-extended string title()
 * @method void type(string $selector, string $text, array $options = [])
 * @method-extended void type(string $selector, string $text, array{ $delay: float, $noWaitAfter: bool, $strict: bool, $timeout: float } $options = null)
 * @method void uncheck(string $selector, array $options = [])
 * @method-extended void uncheck(string $selector, array{ $force: bool, $noWaitAfter: bool, $position: array{ $x: float, $y: float }, $strict: bool, $timeout: float, $trial: bool } $options = null)
 * @method string url()
 * @method-extended string url()
 * @method void waitForLoadState(string $state = null, array $options = [])
 * @method-extended void waitForLoadState(string $state = null, array{ $timeout: float } $options = null)
 * @method null|\PlaywrightPhp\Resources\Response waitForNavigation(array $options = [])
 * @method-extended null|\PlaywrightPhp\Resources\Response waitForNavigation(array{ $timeout: float, $url: string|mixed|callable(callable(mixed $url): bool|\Nesk\Rialto\Data\JsFunction): |\Nesk\Rialto\Data\JsFunction, $waitUntil: string } $options = null)
 * @method void waitForTimeout(float $timeout)
 * @method-extended void waitForTimeout(float $timeout)
 * @method void waitForURL(string|mixed|\Nesk\Rialto\Data\JsFunction $url, array $options = [])
 * @method-extended void waitForURL(string|mixed|callable(callable(mixed $url): bool|\Nesk\Rialto\Data\JsFunction): |\Nesk\Rialto\Data\JsFunction $url, array{ $timeout: float, $waitUntil: string } $options = null)
 */
class Frame extends BasicResource
{
    use AliasesEvaluationMethods;
    use AliasesSelectionMethods;
}
